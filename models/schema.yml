version: 2
models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains Airbnb listings.
    columns:
      - name: listing_id
        description: Primary key for the listing
        tests:
          - unique
          - not_null
      - name: host_id
        description: The hosts's id. References the host table.
        tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id
      - name: room_type
        description: Type of the apartment / room
        tests:
          - accepted_values:
              values:
                - Entire home/apt
                - Private room
                - Shared room
                - Hotel room
      - name: minimum_nights
        description: '{{ doc("dim_listing_cleansed__minimum_nights") }}'
        tests:
          - positive_value
  - name: dim_hosts_cleansed
    description: Cleansed table for the Airbnb hosts
    columns:
      - name: host_id
        description: The id of the host. This is the primary key.
        tests:
          - not_null
          - unique
      - name: host_name
        description: The name of the host
        tests:
          - not_null
      - name: is_superhost
        description: Defines whether the hosts is a superhost.
        tests:
          - accepted_values:
              values:
                - t
                - f
  - name: dim_listings_w_hosts
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: source('sandbox', 'listings')
    columns:
      - name: price
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: number
          - dbt_expectations.expect_column_quantile_values_to_be_between:
              quantile: 0.99
              min_value: 50
              max_value: 500
          - dbt_expectations.expect_column_max_to_be_between:
              max_value: 5000
              config:
                severity: warn
  - name: fct_reviews
    columns:
      - name: listing_id
        tests:
          - relationships:
              to: ref('dim_listings_cleansed')
              field: listing_id
      - name: reviewer_name
        tests:
          - not_null
      - name: review_sentiment
        tests:
          - accepted_values:
              values:
                - positive
                - neutral
                - negative
  - name: mart_fullmoon_reviews
    description: The 'mart_fullmoon_reviews' model is a transformation of the
      'fct_reviews' table from the 'AIRBNB' schema in the 'SANDBOX' database. It
      includes all columns from the 'fct_reviews' table and adds a new column
      'is_full_moon'. This new column is a flag that indicates whether the
      review was made on a full moon day or not. The determination of a full
      moon day is based on the 'seed_full_moon_dates' table from the same
      'AIRBNB' schema. If the review date matches with a full moon date, the
      'is_full_moon' column is set to 'full moon', otherwise, it is set to 'not
      full moon'. The columns in this model include 'review_id', 'listing_id',
      'review_date', 'reviewer_name', 'review_text', 'review_sentiment', and
      'is_full_moon'.
    columns:
      - name: review_id
        data_type: varchar
        quote: true
        description: This is a unique identifier for each review. It is a string type
          column.
      - name: listing_id
        description: The unique identifier for the listing that the review is associated
          with. This is a numeric value.
        data_type: number
        quote: true
      - name: review_date
        data_type: timestamp_ntz
        quote: true
        data_tests:
          - relationships:
              field: review_date
      - name: reviewer_name
        data_type: varchar
        quote: true
      - name: review_text
        data_type: varchar
        quote: true
      - name: review_sentiment
        data_type: varchar
        quote: true
        description: This column contains the sentiment of the review. It is a string
          value that represents the overall sentiment expressed in the review
          text.
      - name: is_full_moon
        data_type: varchar
        quote: true
